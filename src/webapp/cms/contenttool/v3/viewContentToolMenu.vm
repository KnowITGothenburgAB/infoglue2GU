<?xml version="1.0" encoding="UTF-8"?> 

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 
<html>
<head>
	<title>Menus</title>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<meta http-equiv="Expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
	<meta http-equiv="Cache-Control" content="no-cache" />
	<meta http-equiv="Pragma" content="no-cache" />
	<script type="text/javascript" src="script/jquery/jquery-1.3.2.min.js"></script>

	<script type="text/javascript">
	<!-- 		
		var exp;
		var treeIsLoaded = false;
		var currentRepositoryId = "$!repositoryId";
		
		function syncWithTree(path, repositoryId)
		{
			try
			{
    			//alert("AAA:" + path + " - " + repositoryId + ":" + currentRepositoryId + ":" + parent);
    			if(repositoryId && currentRepositoryId != repositoryId)
    				parent.frames['header'].changeRepository(repositoryId, escape(path));
    			
    			#if($tree == "applet")
    				alert('Not implemented in this tree');
    			#else
    				frames['itreeFrame'].syncWithTree(path);
    			#end
			}
			catch(er) 
			{
				alert("Error syncWithTree:" + er);
			} 
		}
		
		function reload()
		{
			removeCookies()
			window.location.reload(false);
		}	
		
		function treeView()
		{
			try 
			{ 
				return document.getElementById("itreeFrame");
 		 	}
			catch(er) 
			{
				alert("Error content menu v3:" + er);
			} 
		}
		
		function htmlTreeItemClick(itemId, repoId, path)
		{
			//alert("htmlTreeItemClick:" + itemId + repoId);
			//if(parent.htmlTreeItemClick)
			//	parent.htmlTreeItemClick(itemId, repoId, path);
			openUrlInWorkArea("ViewContent!V3.action?contentId=" + itemId + "&repositoryId=" + repoId, path);
		}
		   
		function openUrlInWorkArea(url, titel)
		{
			//alert("openUrlInWorkArea:" + url);
			if(parent.openUrlInWorkArea)
				parent.openUrlInWorkArea(url, titel, 'content');
		}

		/*
		function reloadMain()
		{
			if(treeIsLoaded)
			{
				//alert('reloadMain');
				//Resizing the applet..
				resize();
			}
			
			//alert('Setting the main area');
			parent.frames[3].location.href = "ViewContentToolStartPage.action?repositoryId=$!repositoryId";
		}
		*/
		
		function loadMainArea(contentId, repositoryId, path)
		{
		    //alert("contentId:" + contentId);
		    parent.frames[3].location.href = "ViewContent.action?contentId=" + contentId + "&repositoryId=" + repositoryId;
		}
	    
	    function refreshContent(contentId, changeTypeId, addedContentId)
		{
			frames['itreeFrame'].refreshTreeNode(parseInt(contentId), parseInt(changeTypeId), parseInt(addedContentId));
		}
	    	    
	    function notifyIsLoaded()
	    {
	    	//alert("Tree was loaded - notifyIsLoaded");
	    	treeIsLoaded = true;
	    	document.getElementById('treeDiv').style.left = '2px';
	    	document.getElementById('treeDiv').style.right = '2px';	   
	    	setTimeout("expandTreeAfterLoaded();", 500); 	
	    }
	    
	    function expandTreeAfterLoaded()
	    {
	    	//alert("Loaded: $path")
	    	#if($path != "")
				#if($tree == "applet")
					alert('Not implemented in this tree');
				#else
					frames['itreeFrame'].syncWithTree("$path");
				#end
	    	#end
	    }
	    
	    function notifyExp(v)
	    {
	    	exp=v;
	    }
	    
	    function removeCookies() 
		{
			//alert("document.cookie:" + document.cookie);
			var ca = document.cookie.split(';');
			for(var i=0;i < ca.length;i++) 
			{
				var c = ca[i];
				while (c.charAt(0)==' ') 
					c = c.substring(1,c.length);
				
				var eqIndex = c.indexOf("=");
				if (eqIndex > -1)
				{ 
					var name = c.substring(0,eqIndex);
					if(name.indexOf("JSESSIONID") == -1)
						document.cookie = name + "=" + escape("null")+"; expires=Monday, 04-Apr-1970 05:00:00 GMT";
				}
			}
		}
		
	    function resize() 
	    {
	    	//alert("resize");
	    	var w_newWidth;
	    	var w_newHeight;
		    var w_maxWidth  = 1600;
		    var w_maxHeight = 1200;

			if (window.innerWidth || window.innerHeight)
			{ 
				w_newWidth = window.innerWidth; 
				w_newHeight = window.innerHeight; 
			} 
			
			//IE Mozilla 
			if (document.body.clientWidth || document.body.clientHeight)
			{ 
				w_newWidth = document.body.clientWidth; 
				if(document.body.clientHeight == 0)
					w_newHeight = document.documentElement.clientHeight - 10;
				else
					w_newHeight = document.body.clientHeight - 10; 
			} 
			
 		    if (w_newWidth>w_maxWidth)
			    w_newWidth=w_maxWidth;
			
			if (w_newHeight>w_maxHeight)
			    w_newHeight=w_maxHeight;

			if (w_newHeight < 1) //For firebird cases
			    w_newHeight=window.innerHeight - 10;
			
			//alert("w_newWidth:" + w_newWidth);
			//alert("w_newHeight:" + w_newHeight);
			
			try 
			{
				$("itreeFrame").width(w_newWidth - 10).height(w_newHeight - 1);
			}
			catch(err)
			{
				alert("Error:" + err.description);
			}
			
			setTimeout("resize();",3000);
		}

		$(document).ready(function(){
			resize();
			
			//alert('path: $!path');
			//alert('exp: $!exp');
			if("$!path" != "")
				syncWithTree("$!path", currentRepositoryId);
			//else
			//	reloadMain();
 		});

	-->
	</script>
	
	<link rel="stylesheet" type="text/css" href="css/cms.css" /> 
	<link rel="stylesheet" type="text/css" href="css/skins/${theme}/menu.css" />
</head>

<body class="generaltooledit">

    <div id="treeDiv" style="position:absolute; margin-top: 10px; margin-left: 6px; top: 0px; bottom: 6px; float: left;">
    	<iframe frameborder="0" name="itreeFrame" id="itreeFrame" src="ViewContentHtmlTree!V3.action?repositoryId=${repositoryId}" width="220" height="950" align="bottom"></iframe>
	</div>
	
</body>
</html>