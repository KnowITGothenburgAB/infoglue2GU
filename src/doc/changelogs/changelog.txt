-------------------------------------------------------------------------------------
- InfoGlue 2.7.0 Final
-------------------------------------------------------------------------------------

Release notes
---------------------------------------
sssssss


Abbreviated Changelog from 2.6.0 Final 
---------------------------------------
- Fixed spelling mistake in 2 tags concerning useInheritance.
- Fixed user detail view so it shows full group and role names as titles in the list and also increased the width of the select-boxes.
- Fixed "save and exit" on content properties and repository properties. Before it just wrongly exited.
- Added extra check when selecting resource bundle in some parts of the admin tools. A report came about problems when having Slovak as default locale.
- Fixed bug in content creation wizard when you have languages disabled. Now the initial version is allways in the language you used when clicking on the wizard icon.
- Fixed bug where deletion of property was still allowed even though the user had no access rights to that property editing action.
- Added feature in workflow engine so one can set a property called 'finalReturnAddress' in the propertyset of a workflow or send it in when creating a workflow and when the workflow ends the user is directed to that address instead of to the mydesktop view.
- Improved performance in the archive tool.
- Added scope for common:parameter so one can specify requestParameter or requestProperty.
- Fixed so nodes can survive after problem with it's meta info content id.
- Added feature so you can choose to store the assets you have only on disk. Beware - not recommended yet.
- Added new great deployment tool which lets you sync your development server with a test or production server. Has some limits in this first version but is still extremely useful.
- Added new asset protection feature - forces download of assets to be access controlled. Very useful for sensitive/purchaseable assets.
- Added maximum file-size allowed in the file-upload dialog so the user understands whats not allowed.
- Added new cache possibility - now one can state a refresh-rate for the page caches on individual pages.
- Added useDownloadAction to assetUrl-tag. Very useful if you want to protect assets from unauthorized use.
- Added new tag (<page:htmlHeadItem>) for setting html-header tags from components in the page. Very useful as the components then are totally self-contained.
- Made editOnSight-edit-tag also force working mode.
- Fixed so if a content versions access rights are blank the contents access rights are used instead. 
- Fixed so if a component throws an exception it does not get page-cached.
- Made it possible to edit assets from standalone content version view.
- Added feature which allows you to disable enforced identity check on particual pages (only useful when using CAS-SSO).
- Made file upload dialog propose an asset key similar to the filename if you choose the file first.
- Fixed bug with edit on sight popup not dissapearing in some situations when you click next to it.
- Added a new feature which lets you change a component into another. For now it can keep the underlying 
  components if the new component has the same slot names as the sub components was located in. If not the subcomponents are
  removed totally from the page.
- Added new Interception point to control access to change component feature.
- Added so interface scrolls down to categories section in content version when action is made there. 
- Fixed so one can control the cache-taglibs size (OSCache framework) the same way you can control the size of all other caches.
- Improved export repository feature so the export file name can be specified by the user. Before the filenames could be to long if several sites were exported.
- Added features to select user in access rights dialog. Also new button to select onself through a simple click.
- Added feature in SimplifiedJNDIBasicAuthorizationModule so a users extra attributes can be read into the principal objects meta map.
- Improved ContentMover-function (workflow) - Content can now be stored i subfolders of year and month under the designated destination folder.
- Added more memory and user details in the warning mails InfoGlue sends when pages take to long to reach the user.
- Added new workflow store which works a lot better with session management inside hibernate. Should fix most issues with workflows being broken.
- Added asset search as option in content tool search. Also change the look&feel a bit.
- Added possibility in archive tool to use it on latest working versions as well. Useful sometimes to find and shrink any test-assets before export for example. 
- Removed possibility to look at asset in popup from content version edit view if archived.
- Fixed bugs and improved archive tool a lot. The size was not lessened very good  in the previous versions. 
- The attribute targetEndPointAddress on all webservice tags are now optional and defaults to the webservicesBaseUrl + service. 
- Added count-limit on content version entities - should keep down memory usage.
- Added general block in robots.xml and introduced a different one for live-instances. 
- Added so anonymous also gets logged in... by cas module
- Fixed empty assetKey check (javascript) in createContentWizard.
- Improved session / transaction management in the underlaying persistence classes shipped with OSWorkflow by adding our own. Now all session management is made by InfoGlue. Improved performance and action-wide rollbacks etc are a few of the benefits.
- Fixed so interface in all asset uploads always shows the max asset upload size. Also when you state max size on asset keys and switch between them in the dialogs.
- Improved the content history diff view.
- Added a new Interception point "ContentTool.ExportImport" so you can control who are allowed to export and import contents (not site export/import - that is another feature).
- Added a feature in export content and export site so one can skip all assets that are of a certain size and above. Very handy to keep down export size.
- Removed servlet.jar and catalina.jar from distributions. No need for them.
- Added attribute on deliveryContext and changed a bit in pageInvoker which allows you to control the page content type in your components. Both content type and charset can be set in the attribute as once as usual in http.
- Added a new entity called SmallSiteNodeVersion to enhance performance in the tools in some views in large installations.
- Worked more on performance in structure tool. Now no more startup delays hopefully in superlarge installations.
- Patched castor-bug with oracle 10g so oracle limit support is allways true in OQL - we only support oracle 8.1.6 and forward from now on.
- Reversed some changes and removed a lot of extra entities. Instead removed serviceBindings relation on AvailableServiceBinding. Works better.
- Added possibility to clear castor caches individually so one can finetune cache later. Mostly for advanced users.
- Fixed so no duplicates appears when searching for users in management tool.
- Fixed so InfoGlue handles the lack of exact resolution in the OS on currentTimeMillis. Could result on some OS in a bad state. 
- Changed how string size are calculated in caches. Before was far to small.
- Added component name and slot name in property header in decorated page view. 
- Fixed so serverNodePropertiesCache are stored in oscache with a limit. Before it grew to much. Also Added limitation on pageCache to 10000 pages and on serverNodePropertiesCache to 2000 properties but that can be overridden in cache settings as usual.
- Made new cache for string encodings.. no need to keep them together with serverNodeProperties as it will slow it down.
- Fixed bug in SSO-handling.
- Added a new tag (<page:httpHeader>) for adding response headers in a controlled and cache-safe way.
- Added handling of response headers although page cache is on
- Added a few new icons for asset content types.
- Added check so broken assets get's marked and handled better. A constraint is added so no publications can be made with broken assets.
- Improved asset deletion speed a lot upon asset archiving.
- Fixed bug in edit view if a content name had quotes in the names.
- Added parameter called allowCrossSiteSubmitToPublish which if enabled allows items(contents and pages) to be included from from other repositories as well when submitting to publishing in structure tool.
- Remade the application settings screen so it's now tab-based and easier to find in hopefully.
- Added possibility to enable password encryption when using infoglue:s built in authentication system. All passwords will be encrypted in the database with the SHA-1 algorithm.
- Added password-hash-generation tool under system tools. Very useful for generating a root-password hash if you want to use the encryption of passwords.
- Improved the password-changed mail template a bit.
- Added a new method to security framework which is used for resetting anonymous password. 
- Forced update of anonymous user whenever a server node property is changed. This is to secure that it stays plain or encrypted depending on the protection setting.


-------------------------------------------------------------------------------------
- InfoGlue 2.6.0 Final
-------------------------------------------------------------------------------------

Release notes
---------------------------------------
The autumn release 2007 of InfoGlue is here. As usual the new version includes a lot of major and minor changes.
Performance and security are allways improved but finetuning of existing features and bugfixes are also included.

Check out the changelog below for details. 

Thanx to all involved!!

The InfoGlue Team


Abbreviated Changelog from 2.5.0 Final 
---------------------------------------
- Added a new feature which let's you delete all children for a certain content.
- Fixed performance problem in import repository feature when you have a huge installation.
- Updated to OSCache 2.4
- Fixed a new default LRU-algorithm class for OSCache which actually throws away objects when they don't fit in the LRU-cache anymore. The default class shipped with OSCache only invalidated it - it was never removed and could hence not be garbage collected.
- Added possibility to have a thumbnail for each component/HTMLTemplate and also add a description which can then be seen when one tries to add a component and look at the component list dialog.
- Added support for checkboxes in component properties
- Added warning if non-binding properties was edited but not saved in the component editor view when one clicks to assign a binding property. This is so one does not loose the changes automatically.
- Added new tag which can return many values for a property. For example if it's the new checkbox-property a user may choose several options. The tag is called <structure:componentPropertyValues>.
- A new content export / import feature is now available in the content tool.
- Added new methods in componentLogic to get a list of property bound pages or contents on a target siteNode. Before those methods only returned single entities.
- Updated task executor so it supports jsp and freemarker
- Added new property which controls if sites should enforce identity checkup through SSO-plugins even if the pages are not protected. Use with care.
- Fixed bug with message center messages look & feel.
- Added possibility to set that a certain content binding requires which asset to use and also interfaces for the choose dialog.
- Added logic so "EditOnSight" works on the base component - before it worked only on all other sub components.
- Added possibility to set which asset keys should be mandatory to upload - used currently only by the create content wizard but should later be implemented by the save content version / publish actions.
- Added better handling of assets to the create content wizard available next to content binding properties in structure tool. Now mandatory assets are required and additional assets can be uploaded and they can then be used when editing the wysiwyg fields like normal.
- Added new structure:siteNodesFromWebPages-tag which allows easy conversion between a list of WebPage-beans and SiteNodeVO:s which are more suitable for advanced sorting etc.
- Added parsing/el-expressions of siteNodeId on the tag structure:siteNode.
- Added timeout handling in webservice handler (30 seconds)
- Removed bold on a:active - it led to some issues with moving texts upon clicked.
- Included saxon 8.9 in the distribution and created a new tag for transforming with it. It is much faster and less memory expensive than Xalan. Saxon is a XSLT 2.0, XQuery 1.0, and XPath 2.0 conformant processor.
- Removed mail and activation from the local classpath - apache tomcat and others allready includes it.
- Fixed bug in access right view and also fixed so the rows are colored in different colors like all other lists.
- Added new attribute on Include-tag so one now can state if the relation include should be using attribute language fallback. Defaults to true.
- Added a new document conversion tag which operates together with JODConverter (Open Office serverside). It can take a worddocument and convert it on the fly to pdf, odf and html. Our tag also manages to create table of contents separately so you can have navigation separate.
- Fixed so page templates images are scaled down to a conformed format in screens where they are used. Messes up GUI if to large.
- Added scroll-possibility to both structure and content toolbars so buttons can be reached even though the screen resolution is limited.
- Moved task button in content toolbar - decreased importance
- Upgraded to mysql-connector 5.0.7 JDBC driver.
- Added new assets-tag which returns a list of DigitalAssetsVO objects for a content/property binding. This is also available to velocity/freemarker-templates through the templateController-API.
- Added possibility to assetUrl-tag and assetThumbnailUrl-tag so you can state the digitalAssetId directly if you know it. Nice in conjunction with the new assets-tag. This is also available to velocity/freemarker-templates through the templateController-API.
- Fixed bug in URLComposer which led to // at the end of nice-uri:s when constructing url to another repository.
- Added possibility to have different login page for each repository. Just define a loginUrl in the repostory extra properties.
- Added possibility to have different error page for each repository. Just define a errorUrl in the repostory extra properties.
- Fixed bug when disabling and enabling languages which led to "null" in properties edit window.
- Added settings so you can configure if protected contents / sitenodes are to be shown to persons without access in the tool trees.
- Added a setting that enables a more rigid content access enforcement. Very important if working with intranets as the default setting is no good as it caches attributes without principal as key for memory and performance reasons.
- Added an attribute / method in DeliveryContext-object which can control so that non published contents are shown anyway in working mode. You have to set it in the components you want this behaviour.
- Added an attribute and flags on most methods which are of interest which allows you to state if property-inheritance should be limited to the page. Default is page + structure above as before.
- Added a create sitenode wizard (just like the create content wizard) so one can create a sitenode while binding a page to a property.


-------------------------------------------------------------------------------------
- InfoGlue 2.5 Final
-------------------------------------------------------------------------------------

Release notes
---------------------------------------
The summer release 2007 of InfoGlue contains the 2.4.2 version of the popular FCKEditor. It also contains a lot of 
user-interface improvements. Last but not least as usual there are some bugfixes and stability improvements.


Thanx to all involved!!

The InfoGlue Team


Abbreviated Changelog from 2.4.6 Final 
---------------------------------------
- Upgraded FCKEditor(the WYSIWYG-component in InfoGlue) to 2.4.2.
- Improved handling of Available service bindings - remove later completely :)
- Fixed error handling for when inconsistencies are not really there. Old nodes and contents not cleared out from the registry for example.
- Removed cmsUserName and repositoryName when opening preview window.
- Added new contentVersion tag for the cms workflows.
- Made it possible to assign a return address on the createDigitalAsset action so the save button can lead to a different view.
- Fixed bug in getMatchingContents which did not use the user db connection but started a new one.
- Added check so if a user sends in null or a id less than 1 it returns null allways. Saves a lot of errors in the logfiles.
- Fixed bug with overriding references when deleting a sitenode. The old code did not correctly delete the binding and it resulted in an error.
- Fixed issue with active users were counted wrong.
- Added method to get when latest publications were made.
- Changed the httphelper to not skip linebreak chars. 
- Fixed so one now can use non-ascii chars as digitalAssetKey. Two new encodings in app settings allow one to convert depending on server settings. Default settings usually works.
- Made the repositories be sorted by name in most views
- Improved performance and fault tolerance in repository export/import.
- Fixed issue with the Image-editor when using non-ascii user names.
- Fixed so displayName is shown in publishing lists and history instead of userName.
- Fixed nullpointer which occurred when an login failed in extranet.
- Fixed so validation errors gets focus when saving a content version.
- Fixed bug which made edit-on-sight fall back to normal edit view if a validation error occurred.
- Added possibility to have different icons in the content-tree for each content types. Rudimentary at the moment - you have to add an image file with the contentTypeDefinitionId in the infoglueCMS\script\xloadtree\images\xp\-folder.
- Fixed so the text searches with matchingContents etc on SQLServer works. Was a problem with how SQL-server escapes [-tags.
- Made a new webservice method which lets you get a contentVersion for a content remotely.
- Made it possible to have a ContentVersionVO as argument when using the contentAttribute-tag. Makes things easier when dealing with remote versions.
- Added speed improvements to ReferencingPages-tag.
- Added an experimental ClearCache-tag which would allow you to clear the caches from deliver based on that you know what you are doing. Not recommended yet.
- Made evaluation of whole page really not happen if set. Saves a lot of memory and performance on large pages.
- Made publications nor require unique names
- Fixed so language drop in tool-header is now shown if only one language is available.
- Upgraded dbcp to 1.2.2 which says it should solve some connection reset issues not being handled with grace.
- Fixed so JNDI and webservice caches are not cleared upon publication. No need - they time out themselves.
- Made the search view when binding contents better visually - now the path to the found content is only displayed when clicking on the questionmark.
- Added fields and logic to control which languages are available in the tool header.
- Improved handling of assets a lot so now the blob in them are only loaded when needed.
- Added possibility to change content type on any content.
- Fixed so the cas authentication module does not send so many redirects to the CAS-server. It tries to minimize the redirects to just a few actions.
- Added two new taglibs for extracting access rights for a page or other object - that is what roles, users and groups are allowed to access it.
- Fixed issue with logout when running CAS
- Added a new alternative way of making content category searches (matching contents tag etc). Improves performance for complex expressions hugely. 
- Added possibility to control which version of the content search controller should be used in management tool with a new setting. The new default is the improved much faster search method.
- Added support for unicode names in asset keys
- Fixed so the mouse over symbol is hand when choosing repository in publishingtool. 
- Added new webservice API:s for creating, updating and deleting users in InfoGlue. 
- Added new diff-tag which operates on two strings
- Added new contentVersions-tag which fetches all published versions in a certain language.
- Added two new settings concerning dates on pages and contents. 
	1. First one makes it possible to state if the date fields should be editable in combination with the calendar-popup. 
	2. Second one states the default number of years you want expireDateTime on pages and contents should be set to. 
	   Default is 50 years which is perhaps to long for some organisations and now they can set a default value themselves.
- Added a flag on most tags which allows you to disable repository inheritance when looking up properties.
- Fixed issues with updating digitalAssets not being propagating correctly through the digitalAsset caches due to the new SmallDigitalAsset concept.
- Implemented cleanup of content-versions when a user chooses to force removal of inline links and inline images which references a content/page the user wants to delete.
- Fixed better cookie-handling so the menu tree better remembers the expansion of your sites.
- Added a refresh icon to the left menu which lets the user refresh the menu and reset all tool-cookies. Often needed after a while to get the three expansion to work as it should.
- Fixed so the same description tooltip are used for all properties.
- Added so one can search for contents in the inline asset dialog and only get those contents which has an asset on them and the asset name or key matches the searched keyword.
- Made input encoding filter configurable at build-time with properties.
- Made component editor view (structure tool view) consider available tool languages when choosing localized labels for edit on sight etc.
- Added cache-possibility to the matchingContents-tag and implements a default caching.
- Added possibility to add categories to an rss/atom feed with a new common:rssFeedEntryCategory-tag.
- Added new webservices for a lot of authorization framework operations. Approved applications can now use the infoglue users/roles/groups through webservices.
- Added drag/drop support for the multi-binding-views (content and structure) both from the tree to the selection list and you can also sort the list by dragging the items in it to new positions.
- Upgraded the jsdiff-component - some bugs in it is now removed and you can state your own css-styling for the diff elements.
- Improved ViewApplicationState-view with sorting of components based on average time and also added how many hits the average was based on. 
- Added app start date in application state and cleaned up so the data do not contain MB or ms in the text itself but rather on the labels.
- Added possibility to move components up and down in a slot through the edit on sight feature. Previously only reachable through the page structure view.
- Added possibility to turn off the custom icons in content tool tree as this is a huge performance issue on some browsers on mac.
- Added possibility to use the contentVersionTag with contentVersionId instead of content and language. Not for normal use really but useful sometimes.

-------------------------------------------------------------------------------------
- InfoGlue 2.4.6 Final
-------------------------------------------------------------------------------------

Release notes
---------------------------------------
The spring release 2007 of InfoGlue contains a huge amount of new features, bugfixes and improvements.
As allways we encourage upgrading and this release focuses extra on performance, stability, scalability
maintanance and diagnostics so it will hopefully make your life easier. Having that said there are of course
welcomed new features for both users and developers as well.

Thanx to all involved!!

The InfoGlue Team


Abbreviated Changelog from 2.4.1 Final 
---------------------------------------
- InfoGlue now require Java 1.5
- Added fix so if the cas-ticket is first argument it will not be forgotten
- Fixed so one can state to user $currentUrl for cas-serviceURL in the cms-authentication filter as well. Before only one static url could be set.
- Added debug and fixed an issue where anonymous user could interfer with userBase in JNDI-lookups if not set
- Fixed so all url:s are protected in infoglueCMS - before only .action was protected. Instead added so one can specify url:s to allow in web.xml.
- Added user cache to avoid calls to LDAP
- Added finally-blocks to all jndi-context-uses so we clean up all connections even if errors occur
- Changed name on a css-class to avoid clashes with customer classes. .tab is now .igtab
- Added possibility to have a robots.txt in deliver
- Added thumbnail support for PNG-images and made edit-link only appear in front of gif, jpg and png assets in the content tool
- Made image editor a bit more robust - added some checks on crop and resize tools.
- Added feature which allows the system to send notifications to publishers when one or more items are submitted for publication. 
  The notification can either be sent to the publishers which is members of the same group as the submitter or to submitters in a particular group.
  The feature can be turned on/off through the application settings.
- Added feature so a publisher can filter the items submitted to publishing tool. One can look at all items, items submitted by members in any of my groups or items submitter by members of a particular group.
- Added sorting of workflows in my desktop tool so they are allways sorted by creation id
- Added better exception handling in os-workflow integration. Now the database can go down and OS-Workflow will recover when it's available again.
- Added more statistics to the ViewApplicationState-page - now one can see:
	* Total number of requests handled since deliver was started
	* Average processing time (time until response was delivered)
	* Slowest request time since start.
- Added warning mail if workflow engine get's into trouble
- Added so long requests are reported from liveservers to the admin email address.
- Added robots.txt file possibility
- Filter out more hibernate errors with log4j which are duplicates.
- Added so one can see long threads in BlockedThread.jsp
- Fixed so events up for publishing but which are for deleted content versions or site node versions are marked as broken and deleted 
- Tried to fix bug with inherited properties not being recognised for cache eviction when the meta info on the parent node was updated.
- Services are now not totally blocked by AuthenticationFilter.
- Made internal content search and replace work against multiple repositories at once.
- Added possibility to have meta data on InfoGluePrincipal and displayName on InfoGlueGroup and InfoGlueRole.
- Added new helper method to webservice helper which allows one to call a one string argument method.
- Fixed a bug which showed related allready published sitenodes as publishable when submitting to publish.
- Added an extraProperties-field to the repository properties-fields so one can define custom name-value-pairs and extract such information in the site templates.
- Added validation of authorization module in the validation service.
- Added a webservice authorization module. The format of the SOAP-response-content is IG-specifik (an xml string) but still - a new kind of flexibility for organisations to build their own middleware to collect the users, roles and groups for InfoGlue.
- Added a contentPath-attribute to the contentParameter-tag so one can get a directory structure created and the content put in that directory-structure.
- Added a new GenericCombinedAuthorizationModule which allows one to combine any number of similar or different authorization-modules. For example is one wants to combine two LDAP-directories and then InfoGlue:s own it's easy now.
- Added warning message when you log in as root user so users understand do use another account for normal use.
- Added better webservice security
- Added possibility to delete published contents through the webservice
- Improved the generic combined auth module and how the delegated adaptors should handle caches.
- Added logic to allow enable languages on specific pages and their subpages. Complements the disable languages feature.
- Fixed bug in import repository which made contents loose their content types.
- Worked on more advanced component statistics - now one can get average processing time on each component.
- Added possibility to add timeout on http requests from within HttpHelper
- Made all list in the administrative tools sortable on their columns.
- Made it possible to reset the component statistics
- Added handling of focus to links to remove dotted line around it in firefox
- Made content and siteNodes modifyer it's own colum in publish screens so it's sortable
- Added caching on url-encoding to save object creation
- Changed the parser helper for dom4j and how it parses a document - not dependent on xerces DOM any more - instead uses a sax-method to keep memory use down.
- Optimized parts of the deliver engine to use StringBuilder instead of Strings and other performance and memory usage improvements.
- Added a method in the AuthenticationModule which states if a module enforces J2EE security
- Fixed a more correct view of the caches in ViewApplicationState
- Added possibility to control the size of each cache listed in ViewApplicationState - great way to tune memory usage.
- Added new log viewer inside the management tool and from ViewApplicationState.action which allows you to sort of "tail" the important log files. This way you can debug without having access to server.
- Made modified date in content search result into standard format and it's own column so it's sortable.
- Added possibility to control how large the advanced caches can be through the management tool. Very useful for trimming memory consumption.
- Added possibility to search for a content in the content binding dialog. Very useful if you have a huge content mass and don't really know where the content you want is located.
- Improved the statistics of the ViewApplicationState to refelect the sizes of the caches better.
- Added new filtering logic to the content webservices to avoid harmful code or similar external form submits. 
- Fixed so the getUsers(roleName) returns a list of full principals - not only shallow objects.
- Dramatically improved performance when listing all active workflows in mydesktop. Also beneficial for other apps using the API:s.
- Added new JNDI Authorization module which is a rewrite of the old module but is more strict and conforms better to standards and uses full names all over.
- Implemented displayName on principal, role and group so it's easier to build nicer GUI:s when assigning rights etc. When connecting LDAP-sources the fully qualified names are so long it gets hard to read.
- Made adjustments so if a user changes the meta info of a page it also changes the last modifyer and date of the page.
- Added 3 different XPath-handlers for property parsing to compare performance - Xalan, Dom4j and XPP3. For now XPP3 is used - can be configured if needed by setting a property in deliver.properties called "propertiesParser" - Can be "xalan", "dom4j" or "xpp3".
- Tried to improve performance by removing some synchronized blocks in the cache handling. Handles huge number of concurrent visitors better.
- Extended the MatchingContentsTag to also allow text search on any number of content attributes and possibility to limit serch to a specific period in time which can be a huge performance boast.
- Added <management:categoryPath-tag which let's you get the full path to a category. Important in followup searches based on assigned categories for example.
- Added new tag (<content:assignedCategories) and underlying methods to get all categories assigned to a content version. Very useful as part if you want to search for similar contents for example.
- Improved "Add component"-dialog performance hugely when dealing with a large number of components.
- Improved the create interception point dialog so all inactive system interception points (tehre are quite a few) are listed for quick activation.
- Added possibility to control access to all menu items in the management tool. Nice if you want to be able to have some users do only some administrative tasks like diagnosing logs or creating users but nothing else.  
- Created a new "Publish this page" button in structure which is not recursive as a complement to the normal recursive "Publish"-button.
- Added inconsistencies tool which allows you to track down faulty/broken references to deleted contents or pages or components. Also enables you to delete such references.
- Added feature so you now can specify disallowedComponentNames instead of allowedComponentNames on slots if you want. 
- Made so the inconsistenciesController gets a chance to remove references to stuff that are getting deleted.
- Added so warning mail, which can be sent when a page takes more than x seconds, contains what other long thread are active in the system. Of huge value from a debug perspective.
- Added pageing of users in management tool > System users - 100 at a time.
- Added possibility to specify any number of approved roles as authContraint (access to cms tools). Separate them with ; and you are done.
- Added new settings to control how InfoGlue handles huge load. The settings allow you to state if the deliver engine shall limit how many threads should excecute at once. 
  As to many threads at a time results in syncronizing issues and possibly memory issues it is sometimes nice to be able to limit the number to for example 50 concurrent threads. 
  The new threads coming in would be kept waiting until another thread finishes and the idea is that you should set the limit to a size that suits your servers and the load it has.
  Dont mess with these settings if you don't experience problems or if you don't know what it's doing.
- Added logic so a warning email will be sent to the warningEmailRecipient when the memory is dropping below 15% of the maximum java heap size. Consider this an early warning system. Only one mail per application life cycle is sent.  
- Added taglib and logic to invoke workflow actions remotely
- Upgraded to Velocity 1.5 - check the changelog for that project. Hopefully the inline macro issues have really been solved as they say.
- Made all cache update actions and validators time out after 3 seconds. We have seen strange results when remote services hang.
- Fixed a new Import-tag which should be able to replace the normal jstl-import tag which cannot handle timeouts etc well.
- Made better error message handling when lock not granted exceptions due to simultaneous editing occur.
- Made it possible to control if live also should kill long threads and also allow live to have another timeout for when to kill threads.
- Updated the Apache Axis packages to 1.5.1
- Upgraded to Rome 0.9 (RSS libraries)
- Made it possible to state contentId instead of propertyName for tag content:assetThumbnailUrl.
- Fixed bug in access control when protecting which users are allowed to create sitenodes under a sitenode. It behaves correct now.
- Fixed issue with window positioning in IE sometimes
- Moved buttons in masspublishing/unpublishing screens, so that it conforms more with the other screens
- Added new principalContentVersions taglib which lets you look up all contents last modified by a certain user and perhaps is nearing expireDate. Useful in intranets or similar.
- Added tag to get all siteNodes referencing a certain content. Useful for finding where to show a detailed view
- Improved performance hugely on getAllUsers on InfoGlueBasicAuthorizationModule.
- Added tag for getting url that changes the current page language
- Made it possible to in the ig:slot-declaration state if access rights should be disables on that slot. 
  Helpful for when you wish to secure only some slots. No need to set access rights on all slots this way. Use disableAccessControl="true".
- Tried to fix IE7-layout issues with tree navigation

-------------------------------------------------------------------------------------
- InfoGlue 2.4.1 Final
-------------------------------------------------------------------------------------

Release notes
---------------------------------------
This is a bug-fix release for 2.4 which seems to have been released a bit premature. Thanx for the feedback all!!
Everybody must use this rather than 2.4.

Thanx to all involved!!

The InfoGlue Team


Abbreviated Changelog from 2.4 Final 
---------------------------------------
- Fixed so export file names are converted to avoid i18n-chars when exporting a repository
- Added a new section in management tool for archiving and restoring assets of old content versions. 
  This allows administrators to minimize the database space taken by InfoGlue. Up to 90 % of the database are usually digital assets so it can save a lot of backup space and time.
- Added principal to recursive deletion check for site nodes and contents - there was a flaw in protection before on that point
- Fixed flaw in InfoGlueJDBCPropertySet which gave errors when trying to save data in completely fresh databases
- Fixed a bug in content version edit - FCKEditor has changed and interfers with body onload so now we do it in the script-part instead.

-------------------------------------------------------------------------------------
- InfoGlue 2.4 Final
-------------------------------------------------------------------------------------

Release notes
---------------------------------------
The InfoGlue Team are happy to release the best version yet. InfoGlue 2.4 is available for immediate download.
This release contains so many impovements it's hard to say what to lift up. Stability, performance and security is allways in focus of course so quite
a few changes and improvements have been made in those areas. Check out the long list of improvements below.

Thanx to all involved!!

The InfoGlue Team


Abbreviated Changelog from 2.3.5 Final 
---------------------------------------
- Made InfoGlueGroup, InfoGlueRole and InfoGluePrincipal implement serializable so context can share them within a tomcat or in a cluster.
- Added new J2EE-authentication module. It allows one to let the container handle login and infoglue deliver accepts it's principal.
- Added new JDBC Authorization module (experimental so far).
- Changed PortalServletRequest so portlets get the principal object propagated in a better way.
- Changed ViewPage.action so if the user is authenticated by the container it at least asks the authentication module if it's ok.
- Added a protectedRediect which may be used later for container managed auth.
- Made it possible to dictate for the delivery engine from a component that a page should be trimmed before sent to the client. This means components returning xml as a result don't have to be written on one line to avoid invalid xml any more. 
- Completed all classes which uses OQLQuery with closing of OQL and QueryResults object. Fixes issues with max cursors in Oracle and releases resources better.
- Improved mydesktop so any workflows with faulty definitions are not loaded and an warning message are shown next to them.
- Added failcheck for very old version of InfoGlue Databases in validation code
- Enabled user to set new property controlling requests timeout in deliverWorking and preview. Also made system properties come back trimmed so extra spaces are removed. 
- Updated admin tools with a new date picker (jscalendar from dynarch). Much smoother handling and skinnable.
- Made it possible to set onclick on submit buttons used in workflows.
- Added mailer-taglib in web.xml i deliver
- Made fix to avoid ?null after login when no request parameters are available.
- Made module a bit better to avoid dubble / in context
- Made it possible to control what link-classes are available in the FCKEditor from the javascript-init. 
- Changed so the JNDIAuthorizationModule supports SSL and also anonymous bind etc.
- Fixed some css-mistakes
- Improved JNDIAuthorizationModule with several aspects including reuse of bind-operations, case insensitivity and some failover
- Made listings of users, roles and groups sorted on user names
- Added authorization converter and test case. 
- Fixed bug in group handling in LDAP Authorization Module
- Improved authentication mechanism so users, roles and groups can be tagged to be update:able and delete:able individually so several sources can be used.
- Added a new AuthorizationModule which combines a JNDI and InfoGlue's own auth module into one source.
- Improved Authorization system so any number of sources can be combined and each user/role/group can be edited etc if that source it came from supports it.
- Added new JDBC/Infoglue authorization module which can combine those two sources.
- Worked more on having a single source for database definitions for all frameworks which are also manageable through a interface. This is to be able to drop the infoglue wars in the app server and then just set up the database connection and go from there. Not ready yet.
- Defeated the IE cache refresh bug which before made tree not update after change in Internet Explorer.
- Fixed an option when importing so only the latest versions are imported.
- Made intuitive rights transfer GUI:s so one can duplicate one user's/group's/role's rights to another. This makes it easier to move between authorization systems. 
- Added fix so that internal http-calls from InfoGlue does not trigger the update cache filter as that can lead to locks in working environment and a hung system. 
- Made JNDI adaptor more efficient and adding a possibility to cache roles, users and groups for a period of time (definable for each in properties).
- Added possiblity to delete old content versions so one can clean up a huge database. A new button comes up when you enter a earlier version than the latest.
- Changed so table width when used in FCKEditor by default is set to 75% instead of pixels
- Upgraded to FCKEditor 2.3.1 from the 2.2 version we had before
- Improved import utility by adding failchecks, better handling of errors and also fixed bug which did not account for relations to contents and pages created by a relation editor.'
- Fixed bug in component caching which could lead to wrong component being fetched. 
- Added better caching in some areas (content types, component properties) which improves dynamic pages a lot and decreases the xml/xpath cost.
- Fixed bug with opener reload in mozilla when in edit on sight mode. We used <body onload="javascript:.." before and that seems to be working bad - changed to window.onload in javascript.
- Added dbcp-pool on InfoGlueJDBCPropertySet until we completely remove it. Decreases the load on the database server quite a bit.
- Started working on transferring property sets - now optional beta
- Started working on a cleaning function which cleans out broken references to components etc.
- Added cms full base url so we can handle any references between the deliver app and the cms.
- Changed so we don't have multiple NullObjects.
- Changed log4j-references to local variable instead of getLogger() - a bit faster.
- Added toString()-method on BrowserBean so one can debug browser easily in templates
- Worked on beta feature which allows one to save a page as a digitalAsset (suitable for css and javascript nodes for example to avoid overhead).
- Added improved access right check so now one has to have repository access to the repository holding the content to be able to edit it.
- Improved the ViewApplicationState.action page so users are listed last - not in the middle
- Fixed bug in logonUrl-handling
- Fixed so repositories can be placed below other repositories dns-names like http://www.mycomp.com/sitex
- Fixed so deliver working and preview can be protected and that the decorated view never can be shown in live mode.
- Removed a few e.printStacktrace() in favour for more log4j-statements and also modified the log4j.xml to not show messeges about mapping of url failing or components missing in the standard log but in a infoglue log instead. All severe errors should still come out in the normal catalina log.
- Fixed so one can have steps in workflows on other servers and also jump between protocols like http and https.
- Made fix so remoteUserProperties-tag actually cares about the language-id sent in.
- Fixed so application handles https-situations better
- Decreased castor-cache to 5000 on the content version entity to limit the memory footprint a bit.
- Removed hard set of javax.xmk.transform.TransformFactory in PortletDispatcher - was messing with other applications ect and was marked as just a test.
- Made startup output a bit nicer and more informative
- Added more debug info to broken component references so one can see exact which page has the broken reference.
- Added check for sitenodes with no siteNodeVersions - only found on siteNodes with no metaInfoContentId however. After an upgrade from 1.3.2 to 2.4 for example we suggest one run validation at least 2 times to optimize the database.
- Made more setPropertyName methods in taglibs evaluate expressions
- Fixed a workaround to problem with empty slots allowing users with no access to save page template to still do it. Now they get an error when trying.
- Made so warnings such as broken references to components etc are handled by a rolling file appender and stored in each webapps logs directory.
- Made it possible to statein the deliveryContext-object that a page should not be evaluated a final time by velocity after all components has been evaluated. Improves performance but can lead to different behaviour in your sites.
- Worked more on a logging system which is dynamic and still divides the files in severity. 
- Added indexes to digitalAsset table which improves performance on portlet-handling a lot if your database is big.
- Made the system sense when properties are not available in a language one has chosen in the structure-tool editor. Before they were blank or undefined if you choose a language not supported on that page 
- Added so inputCharacterEncoding can be different for cms and deliver i application settings. No more need to mess around in web.xml for that.
- Made ContentSort tag accept a custom comparator - very neat - now you can have InfoGlue use your own custom class for sorting. If the comparator implements TemplateControllerAwareComparator it can also use the templateController-object for lookups in InfoGlue. 
- Fixed a bug which made old page binding be valid if newer versions of a sitenode does not have that binding. Now it should work fine again. This bug only concerned people building sites the old way without components.
- Added better nullchecks for sites that for some reason have pages which has no versions. Only happens when old sites are being upgraded. New sites (build with 2.0 and above) does not have such pages. 
- Removed reference between ServiceDefinition and it's ServiceBindings as no queries go that way and it affects performance to much. Should make no difference to anyone.
- Added alfa version of simple image editor - can be disabled in application settings.
- Updated installer and infoglue login screens with a new logo
- Changed colors a bit in my desktop to a less intense color.
- Fixed so sublist tag now behaves as intended. You state a startIndex and how many elements you want.
- Made errors (404 etc) in cms be directed to error page and not to the tool main action.
- Added error check in ViewSystemUser action - thrown if encoding settings are wrong and one uses userNames with non-ascii-chars.
- Upgraded oscache to 2.3.2 and fixed a small cache issue with component tree not being visualized right when adding slots
- Added so one can define the component cache key either in a component property called CacheKey or in a applikation property componentKey.
- Added experimental property for selective cache update of live servers in almost the same way working servers are updated.
- Added better caching of properties which are not found.
- Improved the new Pooling - before only 10 connections was pooled as a max - which could cause locks in high load sites. Now it's max 200 and configurable through the dbcp.maxActive property
- Changed usedXXX-lists to HashSets so no duplicates are handled - minimizes the cache updates.
- Improved how jsp files are written to disk before used to avoid thread issues
- Added experimental live cache eviction thread. Will make publishing much less heavy and faster as the objective with this class is to throw away only affected items in the cache. Much testing needs to be done though.
- Added methods to get the original full uri and original full querystring - they are usually modified by InfoGlue filters when they reach the templates.
- Improved how attributes and url contents are written to disk when used as assets
- Added possibility to control the pool size of os-propertyset
- Fixed better performance on content covers and site node covers - before central pages and templates could take very long to show.
- Finally got around to optimize the create site node methods - on old installs this could take quite a few seconds when the sites was getting big. Now it takes a couple of milliseconds.
- Added export format as application setting and made the default one version 2 
- Made errors during deletion of repository due to published items better and added force option
- Added support for exporting multiple repositories into one export as well made export handle categories.
- Several small but important performance enhancements to the core
- Added more caching - now also on the InfoGlueJDBCPropertySet - eases the load a lot during publications
- Fixed so empty or "Undefined" text properties are not added.
- Made deletion of a text property in one language not remove the entire property node so the other language-properties are not removed. 
- Added tag to get all categories attributes in a ContentTypeDefinition

-------------------------------------------------------------------------------------
- InfoGlue 2.3.5 Final
-------------------------------------------------------------------------------------

Release notes
---------------------------------------
The InfoGlue Team will not rest for the summer just yet. InfoGlue 2.3.5 is available now.
This release contains better portlet support, JBoss 4 experimental support and a whole lot of work 
concerning caching and threading. Check out the long list of improvements below.

Thanx to all involved!!

The InfoGlue Team


Abbreviated Changelog from 2.3 Final 
---------------------------------------
- Made infoglue divide the transaction into smaller ones when using the getMatchingContents. It often throws Maximum cursors reached in oracle otherwise.
- Fixed so save and exit actually saves in application settings
- Made deletion of server node also clean up in the database propertyset 
- Added functionality so the folder properties is inherited when creating new folder, also made so the properties is removed when content is deleted.
- Added a getIsDecorated() method in the TemplateController to check if the pagenode is render with editonsight.
- Made the decorated tags in editonsight use the setting of the cms property getRequestArgumentDelimiter.
- Fixed the getContentAttribute(Integer contentId, String attributeName, boolean clean) in EditOnSiteBasicTemplateController.
- Fixed html compliance in some files in cms/contenttool/
- Fixed bug in import if repository references another existing repository.
- Made an option to specify exportFormat in cms.properties and this results in much more compact xml-files. Can only be imported by a version later than 2.3 however.
- Fixed bug in import when pages had no siteNodeTypeDefinition
- Added new tag and methods for getting all available languages for a site node, the old one did not regard disabled languages.
- Fixed bug in installers sqlserver scripts - identity column on cmInterceptionPointInterceptor where it should not be
- Made entire cache update less thread sensitive.
  * Now all updates during a transaction is packaged into one update call.
  * More syncronization on cache-objects
  * ViewPage now waits for caches to clear if in working/preview mode to ensure no colissions.
  * Made pushed system publications work
  * Made deliver end threads which takes to long and also send a warning email to the admin. Only in working/preview mode.
- Made NullPointer check on allowedComponents in the properties and added a logger warning if the contenttypedefinition is not found.
- Made installer support JBoss 4
- Changed a lot of details in the portlet driver making hot deploy work as well as supporting portlets in JBoss 4. 
- Made a new section in management which links in all diagnostic tools / screens making debuggingf easier.
- Made cms-user visible in message center - later chat between users should be easy.
- Fixed bug in getMatching contents which was not regarding language when selecting max from content version. 
- Fixed issue with url:s becoming messed up if dnsNames are filled in and some special settings are made. 
- Also fixed language change url 
- Cleaned up the message center look and feel
- Fixed so properties are properly defaulted if not parsed and still in @varName@ format
- Made it possible to turn full url:s globally on or off by setting the useDnsNameInUrl property. Van naturally still be set locally in pages as before.
- Made getDigitalAssetBaseUrl work properly by also fixing getRepositoryBaseUrl
- Added failcheck a bit if no languages was active at all for a page.
- Fixed bug where group list was not cleared when new was added
- Made relation editors show full path to the content / sitenode
- Made SiteNodeVO contain parentSiteNodeId
- Made default expiration date 50 year ahead
- Changed page icon in structure tree - made more sense - the old one was the same as for content folder.
- Added nullcheck in ViewContentVersion - problem could otherwise arise when clicking on a text to edit in a language not yet existing
- Fixed some issues with property editors buttons and also made property window nicer
- Fixed bug and issues with remote digital assets through webservice. File were named Unknown before.
- Added encoding possibility to rss-feeds (taglib and helper)
- Changed the Support-class used in certain circumstances by the content attrribute tag when mapKey is specified 
  to use iso-8859-1 as the getBytes-encoding as java.util.Property-class expects that encoding in the load-method. 
  We should perhaps write a new class for this later but as it is seldom used we will wait a bit.
- Fixed issue with empty passwords in LDAP-authentication resulting in anonymous binds
- Added possibility to set if multiple arguments should be parsed in URL-tag.
- Fixed cache-update bug which led to changes in user/role/group relations did not immediate effect deliver engines in working mode.

-------------------------------------------------------------------------------------
- InfoGlue 2.3 Final
-------------------------------------------------------------------------------------

Release notes
---------------------------------------
The InfoGlue Team is very pleased to finally announce version 2.3 of the InfoGlue CMS and Portal platform.
This release contains many important improvement of the 2.1 release and the platform has matured a lot since then.
Among the new features are a lot of new user features which makes you much more efficient. This along with a big effort on
system management and maintainability as well as on performance makes it worth the wait. We have also made some neat additions 
which let's you expose some editing and user preferences to non-cms-users if you like. Very nice for intranets and community sites. 

Thanx to all involved!!

The InfoGlue Team


Abbreviated Changelog from 2.1 Final 
---------------------------------------

New features
- Added taglib to get principal properties
- Fixed so structure tree can represent if a page is hidden
- Added new taglib parameters to hide protected childpages
- Added new taglibs which lets you have visible links to content wizard and assgn content
- Enabled a new feature called "content wizard" which lets you crate contents from a component property or from a link on the page.
- Fixed functionality to push system messages through ajax
- A new feature makes it possible to unpublish all versions of a content or a sitenode. Recursively.
- Server-settings - so one can manage all server settings in the tools instead of in property files.
- A user is now able to choose which language should be shown first when clicking on a content.
- A new feature lets you add "Shortcuts" in the mydesktop tool so users can do all their work from there.
- Completed userAccess support as an addition to roles and groups in the ACL
- Added webservices-taglibs for updating and deleting contents, versions and assets etc
- Made it possible to get a content type from it's name
- Added taglib which lets one check if a user has access to a certain sitenode
- Huge performance improvments on large sites after an upgrade of the cache system and the completion of a selective cache eviction
- Added new message center to management tool to which lets administrators chat and email to the system users.
- Added new FAQ entries and configuration examples
- Made compression of page responses possible and controllable
- Made it possible to have a workflow return to a special address after finishing instead of allways returning to the mydesktop
- Fixed a possibility to push system settings to live servers.
- Made management changes que up and be ready for push
- Added Submit to publish option in right click menu
- Added session count to ViewApplicationState.action
- Fixed login with cookies and in querystring
- Added method to get if the user is in PageComponent mode
- Added new taglibs which lets you have visible links to content wizard and assgn content
- New method to get logout url
- Added logic and taglib to get all component properties from a site node with a certain name. Example - get all Articles on a page.
- Added language taglib
- Added new UserProperties webservice api and taglibs
- Made it possible to submit to publish directly from edit on sight and then return to the page

Improvements
- Fixed so not all uris are filtered - as with the other filters
- New properties to have a better auth system
- Added new parameter for recaching
- Fixed mouse over on comments in publishing tool so long comments are shown correctly
- Fixed so one can comment a deny on publishing
- Fixed so one can edit the portlet registry by hand
- Worked more on language handling and also made small changes making forms easier
- Worked more on a more covering language solution
- Minor error checks and improvements on remote content handling and multipart parsing
- Made it possible to fallback on individual content attributes to master language
- Made expressions valid for some tags
- Added Submit to publish option in right click menu
- Made rightclick menu more robust and also added two new menu items - the toolbar is now more or less not needed any more so turn it off.
- Fixed so input character encoding can be set live.
- Enabled improved logging possibilities during runtime - now one can set debug level on packages/classes without restarting.
- Made reference handling much better so publication works better
- Added method to get the real original url - even if it's a portlet request
- Fixed issues with CAS login and static service url. Now it can direct the user to a dynamic url
- Fixed some state change logic so a working content version is created when using edit on sight if not in working state
- Made contenttype editor a little more bareable to work in when you have a huge number of fields
- Added more input types for properties, textareas and options are now supported
- Fixed more statistics on users in ViewApplicationState
- Added html-escaping on emails if html-enabled
- Fixed so access error gets reported correctly
- Added better transaction handling in the cms
- Made edit on sight drag down sitenode to working if not allready
- Fixed so even published sitenodes are investigated for associated contents.
- Added convinience methods on LanguageVO so one can get the locale from it and a string representation of the language
- Added new methods and improved login procedure
- Added cache of access rights
- Made the update site node logic only reindex the latest meta info version
- Added new kind of notification type
- Fixed so edit on sight is allways shown no matter what state the page is in. Also made simple view allways have the toolbar.
  This also demanded a new feature which let's a user choose when he presses "Edit Node Properties" if the page should be set to working
  so the user can edit the meta info or not.
- Fixed issues with case sensitivity on linux / mysql and also fixed so the getMatchingContents only returns valid contents
- Made CAS throw better exception if user was SSO-logged in but not found in the authorization system after that
- Made it possible to remove properties and also made deliver and cms ACL seperated
- Adding more debug and made JNDI controllable from management tool
- Made a few changes which makes some broadcast reach all servers, working as well as live
- Improved mydesktop performance by caching workflows and caching propertysets.
- Fixed so authentication module can plug into logout
- Improved page cache when portlets are involved
- Optimized performance and changed fetching strategies a bit. Not allways use model and better cache of asset urls
- Improved performance by skipping available serv bind on sitenodes that have a meta info content id
- Added principal to child content cache
- Added new recache strategy class
- Made pageCache key inherit if set to "default"
- Added encoding to property forms
- Fixed so infoglueRemoteUser allways gets transferred to portlets
- Fixed a way to mix velocity templates and freemarker templates - just add <#-- IG:FreeMarker --> at the top of the component and that will be rendered as a freemarker template
- Cleaned up the code a bit - less html in mydesktop for example
- Fixed warning if to long comments on publishing - limiting to 255 chars
- Fixed issue with empty comments on oracle - defaults to no comment
- Added logic to be able to track an kill hung threads
- Fixed so the edit on sight scripts are referenced fully
- Added disable languages to export/import
- Fixed so one can see when and by who when in submit to publish screen 
- Added modifyer to list of items up for publication
- Removed unneccesairy html/css and made it more strict / validated. Added more defeat browser cache tags as well in tools.
- Upgraded jtds till 1.2 and added new versions of db2 and oracle jdbc-drivers as well.
- Made it possible to state direct publication when creating contents through webservice from deliver.
- Added checks in all binding dialogs actually demands the user to select a page / content before saving. 
- Added anonymous account in application settings
- Made textareas in application settings deletable as are textfields now.
- Made deliver app recognise application settings from property set and made Filter initialize extra properties correct. Anonymous account is fetched correct also.

Changes:
- Success url not needed default in web.xml under the cms-application - removed it.
- Added webservices url
- More memory and less disk in OSCache configs - much faster and less errors.
- Upgraded to OS-Workflow 2.8 as well as the accompanying libs oscore and ospropertyset
- Fixed so only 20 references are shown at a time in structure/content
- Unpublish is allways shown on folders to enable mass unpublish
- Changed some api:s to throw exceptions
- Changed language derivation so a browser language is not choosen if the meta info is not there for that page
- Made it default so the working version of a deliver instance returns any error message as text in the site - for debug puposes. Can be turned off with the paratmeter disableTemplateDebug=true
- Added scripts for upgrade to 2.5
- Added FAQ entry of questions around oracle 10.2 XE
- Added FAQ entry of questions around oracle RAC
- Fixed so portlets with .(dot) in the warfile/context name also can be used. 
  Instead it is not possible to have individual Portlets with .(dot) in their names. Use other separator if needed - like _ or -. 


Bug fixes
- Fixed mapping bug on user/role properties mapping in deliver on oracle
- Fixed bug in content type definition cache not being updated in deliver
- Fixed a bug in security parameter handling
- Fixed bugs with disableEditOnSight and also made languageId a parameter to contentAttribute-tag
- Fixed visualization bug if long comments contains breaks
- Fixed issues with redirect addresses and also with portlet urls.
- Fixed so the flow works on access right
- Fixed bug in content version compare
- Added ordering on contentId - avoids duplicates some times
- Fixed so users access right are not removed if not wanted
- Made move change repository on all children as well - big bug otherwise
- Fixed bug when anonymous is logged in and portlets
- Fixed so taglib reuse does not mess up variables
- Fixed bug with protected textfields etc
- Fixed some encoding bugs
- Fixed issue with dnsnames on oracle
- Fixed bug when domain not available
- Fixed property editing when site not in utf-8 and IE screws it up
- Fixed so remote caches gets updated even if one fails
- Fixed huge bug with url to cache update action
- Fixed some bugs with synchronizations
- Fixed bug when anonymous is logged in and portlets
- Made stuff syncronized as there seem to be a possibility that they interefere
- Fixed bug in cache key and also added missing image
- Fixed bug in inheritence
- Fixed bug with wrong db used
- Fixed missed entity in cache-updates
- Added clear of asset url when access control comes into play
- Fixed bug when stating only digitalAssetPath
- Added caches to clear when recache was finished
- Fixed focus issue on mac firefox
- Fixed issues with access control screen - small bugs
- Fixed issue with disabled form
- Fixed bug in save and exit
- Fixed so &amp; is not destoyed in shortcut xml
- Fixed bug in user filtering feature
- Fixed so getContentVOWithContentTypeDefinition really uses the inparameter - before it was hardcoded to HTMLTemplate content type
- Fixed bug with formatted xml and moving of components
- Fixed bug concerning user access rights and db2(perhaps others) when entering interception points without parameter

-------------------------------------------------------------------------------------
- InfoGlue 2.1 Final
-------------------------------------------------------------------------------------

Release notes
---------------------------------------
InfoGlue 2.1 Final is released. 
Although a lot of critical bugfixes has been made this is much more than a patch-upgrade. This new release has now already been running a few weeks  
in several major production sites and has now proven that the 2.0 version has gotten rid of all the initial bugs and is production ready 
even for high end sites. There are several medium-big changes in this release and the overall stability of the platform has been improved even further.
Look at the huge changelog for more information.

Thanx to all involved!!

The InfoGlue Team


Abbreviated Changelog from 2.0 Final 
---------------------------------------

New features
- Added initial ROME support (RSS) 
- Added Freemarker support (can be turned on instead of velocity which still is default)
- Added access rights on components/slots/toolbar/component properties. If activated you can now state what roles/groups can add/delete components in what part of the page
- Added so if two users tries to modify the same content version the last save results in a warning about concurrent modifications and the save is not made.
- Added a very simple history and compare feature on content versions
- Added possibility to state IP:s that are allowed to admin/update the caches
- Added feature which lets you redirect addresses.
- Added pageCacheKey as property on pages to override if needed, can be used to optimize cache-handling
- New translation added for French
- Added new recache after publication feature that lets you point to a number of sitenodes that will be recached before the old pagecache is thrown away.
- Added a whole range of new workflow functions.
- New WebService API:s for content creation and workflow handling.
- Added taglibs to add contents to the cms remotely.
- Added contribution of a JNDI authenticator
- Added about 40 tags in 5-6 different taglibs which let's you do all needed operations templateLogic did before.
- Added jakarta-mailer taglib and also added support for encryption in the platform.
- Added support for storing extranet user info as cookies - allowing them to autologon.
- Made it possible to select if the page cache should be compressed.
- Upgraded to version 2.2 of FCKEditor (the default WYSIWYG)

Improvements
- Made publishing process much more stable and the live cache updating much more threadsafe.
- You can now reach page structure with rightclick and not only from the palette
- Localized more messages
- Translated the MyDesktop tool fully
- Fixed localization of edit on sight
- Restricted tree to not show meta info folder if one is not root
- Does not allow change of state on a meta info version either. Must follow site node version.
- Meta info folder gets subfolders generated so it does not get so long.
- Fixed so one can state if the modifyer user should change between state changes
- Better error page handling with correct error codes etc.
- Assets can be written to more than one location to enable better clustering.
- Fixed so anonymous-account can be specified in deliver/cms.properties 
- Fixed so access rights are now showing both extradata-icp and nonextradata icp.
- Fixed so preview-buttons go right if nice-uri are used and that repository lookup works better
- Added access rights for workflows.
- Fixed recursive deletion of sitenode and accompanying meta info - also added more null checks
- Better transaction handling in a few places and started another optimizing round in the toolside
- Completed work on access control on component editor and property editor.
- Improved the validation service in management
- Improved the ViewApplicationState action for diagnostics
- Added Java 5 ThreadMX-debugger JSP for debug of threadlocks.
- Fixed the possibility to escape html-entities in content attributes upon retrieval
- Content protection much more coverage
- Added possibility to turn on/off logging during run 
- Added so pageKey can regard cookies and session values as well
- Added possibility to allways get back a full url to all resources and pages
- Fixed so one can turn off nice uri in some url-generation by setting a tag
- Changed so niceURI attribute name can also be fetched from deliver.properties
- Fixed issue with nice uri page lookup - added repository name as key as well as trimmed titel
- Added a new text2image method which supports crop and centered text etc.
- Added so one can fetch properties from different sitesnodes - not only from the one you are on.
- Added memory check JSP
- Added support to turn off inheritance in a slot 
- Fixed so delay in publication could be set - this to allow database-replication to be certain to have finished.
- Changed so only show the first 40 chars of the names of workflows and use mouse over title instead
- Added support to turn off inheritance in a slot
- Fixed so preview-buttons goes correct when using nice-uris with different domain names.

Changes:
- Initial taglib doc generator added
- AccessConstraints and Constraints exceptions are now only info in logs
- Fixed error message for invalid configuration
- Fixed so anonymous cannot be removed or changed
- removed non-parameter method (some workflows can perform all their steps from init)
- Added a quick reference from siteNode-entity to it's meta info content - for future performance use.
- Refactored WorkflowHelper into WorkflowTag.

Bug fixes
- Fixed bugs and did some improvements on the u2date system
- Added failsafe initiation - allways falling back to english
- Fixed so access rights exceptions are shown upon content access
- Fixed nullpointer exception when dns name is missing 
- Fixed bug when saving first version in standalone mode
- Fixed bug in mysettings password dialog 
- Fixed issues with content type definitions and validation rules not being updated
- Fixed transaction bug in basecontroller and affected classes - also removed static in authmodule.
- Fixed transaction handling in IG authorization controllers
- Made publication controller able to handle broken content/sitenode versions and added a nullcheck in the site nodeversion and contentversion controllers
- Fixed transaction issue in asset copying
- Fixed so any broken versions are removed so the publishing tool will not be crashed.
- Fixed bug if siteNodeVersion is floating without a siteNode
- Added failsafe check if a content or sitenode does not exist
- Better handling of commit/rollback/close...
- Fixed issue with cache key and windows filenames - uses _ instead of : 
- Fixed null pointer when no page version
- Fixed bug in childPages which returned non valid ones as well
- Fixed nullpointer exception in cookie handling
- Fixed bug with /-path 
- Fixed issues with css-classes messing up some clients structure view
- Fixed bug with multipart and cms contextname other than infoglueCMS
- Fixed errornous slot indicies.

-------------------------------------------------------------------------------------
- InfoGlue 2.0 Final
-------------------------------------------------------------------------------------

Release notes
---------------------------------------
InfoGlue 2.0 Final is finally released. 
We have worked long and hard with this release as several big changes has been made and several big new features has been added.
With this release InfoGlue has taken the step from being only a good CMS to now being a Portal/CMS hybrid which was allways the intention.
This release contains many bugfixes compared to 2.0RC2 but also features a lot of new functionality and performance improvements.

Thanx to all involved!!

The InfoGlue Team


Abbreviated Changelog from 2.0RC2 
---------------------------------------

New features
- Added possibility to set a parent repository in repository properties - this in turn means properties can be inherited between repositories.
- Added property to repository so one can set which repository should be default when looking for components
- Added a component property editor so one can avoid the xml-mode as a developer.
- Added a lot of InfoGlue taglibs for JSP developers.
- Added mysettings handling. Now it's possible to set preferred language and tool and also change password yourself.
- Made it possible to set which components are allowed in a slot
- Fixed so hidden fields are supported in content type definitions

Improvements
- Changed all classes to use log4j
- Fixed so validation errors does not reinitialize the old data but keep the bad one for the user
- Fixed so one can use page templates on existing pages as well and also added filtering so only
pageTemplates with meta info in the same language that your site has for master language can be used
- Added methods to get info about a property on a specific sitenode.
- Improved performance on both deliver and tools.
- Added info-button on workflows. Also made page templates rights-protected. 
- Added model relation between contentVersion and contentCategory and contentCategory and category and changed the logic accordingly.
- Improved possibility to set title on workflows in the MyDesktop view.
- Added methods for common fileupload
- Added possibility to restrict if the image should have sizes assigned in WYSIWYG and fixed some bugs.
- Parametirized URIEncoding
- Updated to Pluto 1.0.1rc4

Changes:
- Had to removed so edit on sight only works in the internal page view - not in working delivery.

Bug fixes
- portlet deployment removes web.xml elements
- Fixed issues with portlets and file uploads - now uploads reach the portlet
- Fixed so saveAndExit works on some property screens
- Fixed unclosed transaction in portlet handling
- Fixed base url so graphics etc becomes correct in the login screen (for nice uri:s)
- Fixed a bug with root nodes and nice uri:s when changing languages.
- Added class to input-fields in the component editor and made other aspects of the component editor less sensitive.




-------------------------------------------------------------------------------------
- InfoGlue 2.0 RC2
-------------------------------------------------------------------------------------

Release notes
---------------------------------------
The second release candidate for version 2.0 of InfoGlue is released.
This release contains many bugfixes compared to 2.0RC1 and is probably the last candidate before we release 2.0 Final.

Thanx to all involved!!

The InfoGlue Team


Abbreviated Changelog from 2.0RC1 
---------------------------------------

New features
- Made it possible to choose URI request parameter delimiter (& normally). To support XHTML better. 
- Added two new interception points: 
	* Publication.Write which notifies interceptors upon a publication taking place and 
	* Repository.ReadForBinding which is a part of the new possibility to allow sharing of info between repositories without having access to the repository in other ways.
- A new feature in content types which lets you initialize attributes with prestated values.
- Made ViewApplicationState.action much more informative and made it possible to empty caches from there.
- Made hotkey Alt+S save in content editing screens - not in WYSIWYG fields though.
- You can now add more tool-language-links in the tool interface from the cms.properties file.
- It's now possible to state that template-choosing dialog should be by default listing components in a different repository than the user are working in. For sharing setups.

Improvements
- An improved cache update strategy which does not require database access during that reqest but rather que it up.
- Improved registry consistency on updates all over.
- Now allows spaces in workflow names
- Much better expire cache strategy with Quartz jobs handling it on all applications.
- Improved NiceURI a lot so it now handles linking between repositories, component editor and some other issues. You can now also choose which attribute/sitenode name it should work with. 
- Cleaned up and fixed so site css does not mess up the component editors gui.
- You can now navigate directly in component editor and still be in decorated mode.
- Changed so the publication details of a publication is now not allways fetched. Only fetched on request and popped up in it's own window.
- We moved email rendering out of the code as proposed by Frank Febbraro so now it's possible to style this in a velocity template. You can also choose html or plain format.

Bug fixes
- Huge bug fixed in asset copy on state change. Made all version of a content work with the same asset.
- Preview button was not included in install
- Settings not done correct in install, affects propertyset.xml and hibernate.conf
- Login filter got wrong parameter which resulted in blank page after login.
1216331 - "Check all" and "Uncheck all" does not work



-------------------------------------------------------------------------------------
- InfoGlue 2.0 RC1
-------------------------------------------------------------------------------------

Release notes
---------------------------------------
The InfoGlue Team is very pleased to finally announce the first Release Candidate of version 2.0.
This release is by far the largest effort yet and since we incorporated JSR 168 and enhanced workflow support the platform has taken a big leap into the portal and enterprise content management area. As a comment we are also very happy to see that the user community is growing fast even though we have neglected marketing at the moment. 
Quite a few large organisations are now in the last stages of launching InfoGlue-based sites and the release of 2.0 will hopefully get even more companies to consider it.

Thanx to all involved!!

The InfoGlue Team


Abbreviated Changelog from 1.3.2 
---------------------------------------

New features
- Better support for Java 5. Xalan is now included by default.
- We now have support for JSR 168 thanx to the guys at "Myndigheten f�r skolutveckling" (Jan, Robert, G�ran). Apache Pluto is incorporated nicely.
- Categorization is implemented nicely. Brings a lot of possibilities to how to build a site and personalize it.
- Added a new concept called "Groups" to complement users and roles in the security model. 
- The component editor and edit on sight is now somewhat the same.
- One can add workflow options on components so the options (like "Create News") turns up on the edit on sight menu for the news component. 
- Support of component restricting that only contents of certain content type(s) are available to users in a particular component binding dialog
- Support for restricting what content types a role/group can create content of
- Support for restricting what kind of contents are allowed below a certain folder
- Support for assigning default content type for new contents below a certain folder
- Support for assigning a default forlder content type
- Added possibility to move multiple contents and sitenodes at once.
- Added direct publishing/unpublishing feature for publishers.
- A new registry feature keeps track of what happens and what contents/sitenodes depend on what so that the user gets a warning when he does something that will result in inconsistency or broken links. 
- When publishing, dependent changes are also listed as proposed items to publish.
- Validation on content versions are now added at long last. Required, Required If and Match RegularExpression is available from the start but more can be added.
- The internal search feature has been much improved and also equipped with a multiple replace feature. Whohoo..
- The possibility to move components on a page within a slot.
- The ability to set session timeout for tool users.
- Improved JSP support and some InfoGlue taglibs added. More to come in later versions.
- Webservices support added with some examples. Not to many API:s exposed yet though.
- Added component cache and selective cache updates on that.
- Added a simple view of the component editor for cases where the html breaks down. 
- Thanx to Frank and Jed the project has gotten some better cvs structure and much improved workflow api:s. 

Improvments
- Much better performance and less memory consumption for all applications. Better db-pooling and more advanced caches to reduce load on dbserver.
- Selective cache updates on page cache.
- Added a new WYSIWYG (FCKEditor) which is far superior to the old HTMLArea we used (which is discontinued by the way). FCKEditor is now the default editor.
- Improved dialogs in WYSIWYG and also better possibilities to customaize the toolbar etc on the WYSIWYG toolbar / css etc.
- Possibility to link to assets and to pages with content as argument from WYSIWYG.
- Possibility to change password easier.
- Made workflows definitions part of the data model so it's easy to manage and distribute. Also changed to Hibernate for it's data layer.
- The user is now directly taken to the master content version when clicking on a content. A new button shows the cover.
- The user is now directly taken to the page component view when clicking a sitenode. A new button shows the cover.
- Refactored the views a bit so there is only one view in management. No dropdown to repository settings.
- SystemUser-, Group- and Role properties now has full support for assets, categories and relations just like content versions.
- A much improved asset upload is in place. It shows direct feedback on upload and real error messages if failed. 
- You can restrict asset size very detailed on size, width and height in the content types.
- Made all interfaces much better and more robust. A lot of improvments and the possibility to move and resize much of the items in the component editor.
- The tool-tree now remembers branches you used from before which helps a lot.
- Publishing-tool now shows only 10 publications at a time.
- Support for ImageMagic added as thumbnail generator instead of Javas own. 
- Easier to add new languages to the gui.
- Much improved support for Mozilla Firefox - now the primary development browser and highly recommended over IE.

Bug fixes
- 1090285	nice-uri URLComposer bug
- 1119067	Adding Users to Roles
- 1047710	Installation Error-FileNotFound
- 947633	HTMLFormular drops attributes
- 1078314	1.3: Javascript error on "Extranet login"
- 1108936	Editing an object problem Tomcat 4.1 Java 1.5
- 1110545	filenames with # doesn't supports