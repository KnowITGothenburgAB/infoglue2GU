-------------------------------------------------------------------------------------
- InfoGlue 2.3.5 Final
-------------------------------------------------------------------------------------

Release notes
---------------------------------------
The InfoGlue Team will not rest for the summer just yet. InfoGlue 2.3.5 is available now.
This release contains better portlet support, JBoss 4 experimental support and a whole lot of work 
concerning caching and threading. Check out the long list of improvements below.

Thanx to all involved!!

The InfoGlue Team


Abbreviated Changelog from 2.3 Final 
---------------------------------------
- Made infoglue divide the transaction into smaller ones when using the getMatchingContents. It often throws Maximum cursors reached in oracle otherwise.
- Fixed so save and exit actually saves in application settings
- Made deletion of server node also clean up in the database propertyset 
- Added functionality so the folder properties is inherited when creating new folder, also made so the properties is removed when content is deleted.
- Added a getIsDecorated() method in the TemplateController to check if the pagenode is render with editonsight.
- Made the decorated tags in editonsight use the setting of the cms property getRequestArgumentDelimiter.
- Fixed the getContentAttribute(Integer contentId, String attributeName, boolean clean) in EditOnSiteBasicTemplateController.
- Fixed html compliance in some files in cms/contenttool/
- Fixed bug in import if repository references another existing repository.
- Made an option to specify exportFormat in cms.properties and this results in much more compact xml-files. Can only be imported by a version later than 2.3 however.
- Fixed bug in import when pages had no siteNodeTypeDefinition
- Added new tag and methods for getting all available languages for a site node, the old one did not regard disabled languages.
- Fixed bug in installers sqlserver scripts - identity column on cmInterceptionPointInterceptor where it should not be
- Made entire cache update less thread sensitive.
  * Now all updates during a transaction is packaged into one update call.
  * More syncronization on cache-objects
  * ViewPage now waits for caches to clear if in working/preview mode to ensure no colissions.
  * Made pushed system publications work
  * Made deliver end threads which takes to long and also send a warning email to the admin. Only in working/preview mode.
- Made NullPointer check on allowedComponents in the properties and added a logger warning if the contenttypedefinition is not found.
- Made installer support JBoss 4
- Changed a lot of details in the portlet driver making hot deploy work as well as supporting portlets in JBoss 4. 
- Made a new section in management which links in all diagnostic tools / screens making debuggingf easier.
- Made cms-user visible in message center - later chat between users should be easy.
- Fixed bug in getMatching contents which was not regarding language when selecting max from content version. 
- Fixed issue with url:s becoming messed up if dnsNames are filled in and some special settings are made. 
- Also fixed language change url 
- Cleaned up the message center look and feel
- Fixed so properties are properly defaulted if not parsed and still in @varName@ format
- Made it possible to turn full url:s globally on or off by setting the useDnsNameInUrl property. Van naturally still be set locally in pages as before.
- Made getDigitalAssetBaseUrl work properly by also fixing getRepositoryBaseUrl
- Added failcheck a bit if no languages was active at all for a page.
- Fixed bug where group list was not cleared when new was added
- Made relation editors show full path to the content / sitenode
- Made SiteNodeVO contain parentSiteNodeId
- Made default expiration date 50 year ahead
- Changed page icon in structure tree - made more sense - the old one was the same as for content folder.
- Added nullcheck in ViewContentVersion - problem could otherwise arise when clicking on a text to edit in a language not yet existing
- Fixed some issues with property editors buttons and also made property window nicer
- Fixed bug and issues with remote digital assets through webservice. File were named Unknown before.
- Added encoding possibility to rss-feeds (taglib and helper)
- Changed the Support-class used in certain circumstances by the content attrribute tag when mapKey is specified 
  to use iso-8859-1 as the getBytes-encoding as java.util.Property-class expects that encoding in the load-method. 
  We should perhaps write a new class for this later but as it is seldom used we will wait a bit.
- Fixed issue with empty passwords in LDAP-authentication resulting in anonymous binds
- Added possibility to set if multiple arguments should be parsed in URL-tag.
- Fixed cache-update bug which led to changes in user/role/group relations did not immediate effect deliver engines in working mode.

-------------------------------------------------------------------------------------
- InfoGlue 2.3 Final
-------------------------------------------------------------------------------------

Release notes
---------------------------------------
The InfoGlue Team is very pleased to finally announce version 2.3 of the InfoGlue CMS and Portal platform.
This release contains many important improvement of the 2.1 release and the platform has matured a lot since then.
Among the new features are a lot of new user features which makes you much more efficient. This along with a big effort on
system management and maintainability as well as on performance makes it worth the wait. We have also made some neat additions 
which let's you expose some editing and user preferences to non-cms-users if you like. Very nice for intranets and community sites. 

Thanx to all involved!!

The InfoGlue Team


Abbreviated Changelog from 2.1 Final 
---------------------------------------

New features
- Added taglib to get principal properties
- Fixed so structure tree can represent if a page is hidden
- Added new taglib parameters to hide protected childpages
- Added new taglibs which lets you have visible links to content wizard and assgn content
- Enabled a new feature called "content wizard" which lets you crate contents from a component property or from a link on the page.
- Fixed functionality to push system messages through ajax
- A new feature makes it possible to unpublish all versions of a content or a sitenode. Recursively.
- Server-settings - so one can manage all server settings in the tools instead of in property files.
- A user is now able to choose which language should be shown first when clicking on a content.
- A new feature lets you add "Shortcuts" in the mydesktop tool so users can do all their work from there.
- Completed userAccess support as an addition to roles and groups in the ACL
- Added webservices-taglibs for updating and deleting contents, versions and assets etc
- Made it possible to get a content type from it's name
- Added taglib which lets one check if a user has access to a certain sitenode
- Huge performance improvments on large sites after an upgrade of the cache system and the completion of a selective cache eviction
- Added new message center to management tool to which lets administrators chat and email to the system users.
- Added new FAQ entries and configuration examples
- Made compression of page responses possible and controllable
- Made it possible to have a workflow return to a special address after finishing instead of allways returning to the mydesktop
- Fixed a possibility to push system settings to live servers.
- Made management changes que up and be ready for push
- Added Submit to publish option in right click menu
- Added session count to ViewApplicationState.action
- Fixed login with cookies and in querystring
- Added method to get if the user is in PageComponent mode
- Added new taglibs which lets you have visible links to content wizard and assgn content
- New method to get logout url
- Added logic and taglib to get all component properties from a site node with a certain name. Example - get all Articles on a page.
- Added language taglib
- Added new UserProperties webservice api and taglibs
- Made it possible to submit to publish directly from edit on sight and then return to the page

Improvements
- Fixed so not all uris are filtered - as with the other filters
- New properties to have a better auth system
- Added new parameter for recaching
- Fixed mouse over on comments in publishing tool so long comments are shown correctly
- Fixed so one can comment a deny on publishing
- Fixed so one can edit the portlet registry by hand
- Worked more on language handling and also made small changes making forms easier
- Worked more on a more covering language solution
- Minor error checks and improvements on remote content handling and multipart parsing
- Made it possible to fallback on individual content attributes to master language
- Made expressions valid for some tags
- Added Submit to publish option in right click menu
- Made rightclick menu more robust and also added two new menu items - the toolbar is now more or less not needed any more so turn it off.
- Fixed so input character encoding can be set live.
- Enabled improved logging possibilities during runtime - now one can set debug level on packages/classes without restarting.
- Made reference handling much better so publication works better
- Added method to get the real original url - even if it's a portlet request
- Fixed issues with CAS login and static service url. Now it can direct the user to a dynamic url
- Fixed some state change logic so a working content version is created when using edit on sight if not in working state
- Made contenttype editor a little more bareable to work in when you have a huge number of fields
- Added more input types for properties, textareas and options are now supported
- Fixed more statistics on users in ViewApplicationState
- Added html-escaping on emails if html-enabled
- Fixed so access error gets reported correctly
- Added better transaction handling in the cms
- Made edit on sight drag down sitenode to working if not allready
- Fixed so even published sitenodes are investigated for associated contents.
- Added convinience methods on LanguageVO so one can get the locale from it and a string representation of the language
- Added new methods and improved login procedure
- Added cache of access rights
- Made the update site node logic only reindex the latest meta info version
- Added new kind of notification type
- Fixed so edit on sight is allways shown no matter what state the page is in. Also made simple view allways have the toolbar.
  This also demanded a new feature which let's a user choose when he presses "Edit Node Properties" if the page should be set to working
  so the user can edit the meta info or not.
- Fixed issues with case sensitivity on linux / mysql and also fixed so the getMatchingContents only returns valid contents
- Made CAS throw better exception if user was SSO-logged in but not found in the authorization system after that
- Made it possible to remove properties and also made deliver and cms ACL seperated
- Adding more debug and made JNDI controllable from management tool
- Made a few changes which makes some broadcast reach all servers, working as well as live
- Improved mydesktop performance by caching workflows and caching propertysets.
- Fixed so authentication module can plug into logout
- Improved page cache when portlets are involved
- Optimized performance and changed fetching strategies a bit. Not allways use model and better cache of asset urls
- Improved performance by skipping available serv bind on sitenodes that have a meta info content id
- Added principal to child content cache
- Added new recache strategy class
- Made pageCache key inherit if set to "default"
- Added encoding to property forms
- Fixed so infoglueRemoteUser allways gets transferred to portlets
- Fixed a way to mix velocity templates and freemarker templates - just add <#-- IG:FreeMarker --> at the top of the component and that will be rendered as a freemarker template
- Cleaned up the code a bit - less html in mydesktop for example
- Fixed warning if to long comments on publishing - limiting to 255 chars
- Fixed issue with empty comments on oracle - defaults to no comment
- Added logic to be able to track an kill hung threads
- Fixed so the edit on sight scripts are referenced fully
- Added disable languages to export/import
- Fixed so one can see when and by who when in submit to publish screen 
- Added modifyer to list of items up for publication
- Removed unneccesairy html/css and made it more strict / validated. Added more defeat browser cache tags as well in tools.
- Upgraded jtds till 1.2 and added new versions of db2 and oracle jdbc-drivers as well.
- Made it possible to state direct publication when creating contents through webservice from deliver.
- Added checks in all binding dialogs actually demands the user to select a page / content before saving. 
- Added anonymous account in application settings
- Made textareas in application settings deletable as are textfields now.
- Made deliver app recognise application settings from property set and made Filter initialize extra properties correct. Anonymous account is fetched correct also.

Changes:
- Success url not needed default in web.xml under the cms-application - removed it.
- Added webservices url
- More memory and less disk in OSCache configs - much faster and less errors.
- Upgraded to OS-Workflow 2.8 as well as the accompanying libs oscore and ospropertyset
- Fixed so only 20 references are shown at a time in structure/content
- Unpublish is allways shown on folders to enable mass unpublish
- Changed some api:s to throw exceptions
- Changed language derivation so a browser language is not choosen if the meta info is not there for that page
- Made it default so the working version of a deliver instance returns any error message as text in the site - for debug puposes. Can be turned off with the paratmeter disableTemplateDebug=true
- Added scripts for upgrade to 2.5
- Added FAQ entry of questions around oracle 10.2 XE
- Added FAQ entry of questions around oracle RAC
- Fixed so portlets with .(dot) in the warfile/context name also can be used. 
  Instead it is not possible to have individual Portlets with .(dot) in their names. Use other separator if needed - like _ or -. 


Bug fixes
- Fixed mapping bug on user/role properties mapping in deliver on oracle
- Fixed bug in content type definition cache not being updated in deliver
- Fixed a bug in security parameter handling
- Fixed bugs with disableEditOnSight and also made languageId a parameter to contentAttribute-tag
- Fixed visualization bug if long comments contains breaks
- Fixed issues with redirect addresses and also with portlet urls.
- Fixed so the flow works on access right
- Fixed bug in content version compare
- Added ordering on contentId - avoids duplicates some times
- Fixed so users access right are not removed if not wanted
- Made move change repository on all children as well - big bug otherwise
- Fixed bug when anonymous is logged in and portlets
- Fixed so taglib reuse does not mess up variables
- Fixed bug with protected textfields etc
- Fixed some encoding bugs
- Fixed issue with dnsnames on oracle
- Fixed bug when domain not available
- Fixed property editing when site not in utf-8 and IE screws it up
- Fixed so remote caches gets updated even if one fails
- Fixed huge bug with url to cache update action
- Fixed some bugs with synchronizations
- Fixed bug when anonymous is logged in and portlets
- Made stuff syncronized as there seem to be a possibility that they interefere
- Fixed bug in cache key and also added missing image
- Fixed bug in inheritence
- Fixed bug with wrong db used
- Fixed missed entity in cache-updates
- Added clear of asset url when access control comes into play
- Fixed bug when stating only digitalAssetPath
- Added caches to clear when recache was finished
- Fixed focus issue on mac firefox
- Fixed issues with access control screen - small bugs
- Fixed issue with disabled form
- Fixed bug in save and exit
- Fixed so &amp; is not destoyed in shortcut xml
- Fixed bug in user filtering feature
- Fixed so getContentVOWithContentTypeDefinition really uses the inparameter - before it was hardcoded to HTMLTemplate content type
- Fixed bug with formatted xml and moving of components
- Fixed bug concerning user access rights and db2(perhaps others) when entering interception points without parameter

-------------------------------------------------------------------------------------
- InfoGlue 2.1 Final
-------------------------------------------------------------------------------------

Release notes
---------------------------------------
InfoGlue 2.1 Final is released. 
Although a lot of critical bugfixes has been made this is much more than a patch-upgrade. This new release has now already been running a few weeks  
in several major production sites and has now proven that the 2.0 version has gotten rid of all the initial bugs and is production ready 
even for high end sites. There are several medium-big changes in this release and the overall stability of the platform has been improved even further.
Look at the huge changelog for more information.

Thanx to all involved!!

The InfoGlue Team


Abbreviated Changelog from 2.0 Final 
---------------------------------------

New features
- Added initial ROME support (RSS) 
- Added Freemarker support (can be turned on instead of velocity which still is default)
- Added access rights on components/slots/toolbar/component properties. If activated you can now state what roles/groups can add/delete components in what part of the page
- Added so if two users tries to modify the same content version the last save results in a warning about concurrent modifications and the save is not made.
- Added a very simple history and compare feature on content versions
- Added possibility to state IP:s that are allowed to admin/update the caches
- Added feature which lets you redirect addresses.
- Added pageCacheKey as property on pages to override if needed, can be used to optimize cache-handling
- New translation added for French
- Added new recache after publication feature that lets you point to a number of sitenodes that will be recached before the old pagecache is thrown away.
- Added a whole range of new workflow functions.
- New WebService API:s for content creation and workflow handling.
- Added taglibs to add contents to the cms remotely.
- Added contribution of a JNDI authenticator
- Added about 40 tags in 5-6 different taglibs which let's you do all needed operations templateLogic did before.
- Added jakarta-mailer taglib and also added support for encryption in the platform.
- Added support for storing extranet user info as cookies - allowing them to autologon.
- Made it possible to select if the page cache should be compressed.
- Upgraded to version 2.2 of FCKEditor (the default WYSIWYG)

Improvements
- Made publishing process much more stable and the live cache updating much more threadsafe.
- You can now reach page structure with rightclick and not only from the palette
- Localized more messages
- Translated the MyDesktop tool fully
- Fixed localization of edit on sight
- Restricted tree to not show meta info folder if one is not root
- Does not allow change of state on a meta info version either. Must follow site node version.
- Meta info folder gets subfolders generated so it does not get so long.
- Fixed so one can state if the modifyer user should change between state changes
- Better error page handling with correct error codes etc.
- Assets can be written to more than one location to enable better clustering.
- Fixed so anonymous-account can be specified in deliver/cms.properties 
- Fixed so access rights are now showing both extradata-icp and nonextradata icp.
- Fixed so preview-buttons go right if nice-uri are used and that repository lookup works better
- Added access rights for workflows.
- Fixed recursive deletion of sitenode and accompanying meta info - also added more null checks
- Better transaction handling in a few places and started another optimizing round in the toolside
- Completed work on access control on component editor and property editor.
- Improved the validation service in management
- Improved the ViewApplicationState action for diagnostics
- Added Java 5 ThreadMX-debugger JSP for debug of threadlocks.
- Fixed the possibility to escape html-entities in content attributes upon retrieval
- Content protection much more coverage
- Added possibility to turn on/off logging during run 
- Added so pageKey can regard cookies and session values as well
- Added possibility to allways get back a full url to all resources and pages
- Fixed so one can turn off nice uri in some url-generation by setting a tag
- Changed so niceURI attribute name can also be fetched from deliver.properties
- Fixed issue with nice uri page lookup - added repository name as key as well as trimmed titel
- Added a new text2image method which supports crop and centered text etc.
- Added so one can fetch properties from different sitesnodes - not only from the one you are on.
- Added memory check JSP
- Added support to turn off inheritance in a slot 
- Fixed so delay in publication could be set - this to allow database-replication to be certain to have finished.
- Changed so only show the first 40 chars of the names of workflows and use mouse over title instead
- Added support to turn off inheritance in a slot
- Fixed so preview-buttons goes correct when using nice-uris with different domain names.

Changes:
- Initial taglib doc generator added
- AccessConstraints and Constraints exceptions are now only info in logs
- Fixed error message for invalid configuration
- Fixed so anonymous cannot be removed or changed
- removed non-parameter method (some workflows can perform all their steps from init)
- Added a quick reference from siteNode-entity to it's meta info content - for future performance use.
- Refactored WorkflowHelper into WorkflowTag.

Bug fixes
- Fixed bugs and did some improvements on the u2date system
- Added failsafe initiation - allways falling back to english
- Fixed so access rights exceptions are shown upon content access
- Fixed nullpointer exception when dns name is missing 
- Fixed bug when saving first version in standalone mode
- Fixed bug in mysettings password dialog 
- Fixed issues with content type definitions and validation rules not being updated
- Fixed transaction bug in basecontroller and affected classes - also removed static in authmodule.
- Fixed transaction handling in IG authorization controllers
- Made publication controller able to handle broken content/sitenode versions and added a nullcheck in the site nodeversion and contentversion controllers
- Fixed transaction issue in asset copying
- Fixed so any broken versions are removed so the publishing tool will not be crashed.
- Fixed bug if siteNodeVersion is floating without a siteNode
- Added failsafe check if a content or sitenode does not exist
- Better handling of commit/rollback/close...
- Fixed issue with cache key and windows filenames - uses _ instead of : 
- Fixed null pointer when no page version
- Fixed bug in childPages which returned non valid ones as well
- Fixed nullpointer exception in cookie handling
- Fixed bug with /-path 
- Fixed issues with css-classes messing up some clients structure view
- Fixed bug with multipart and cms contextname other than infoglueCMS
- Fixed errornous slot indicies.

-------------------------------------------------------------------------------------
- InfoGlue 2.0 Final
-------------------------------------------------------------------------------------

Release notes
---------------------------------------
InfoGlue 2.0 Final is finally released. 
We have worked long and hard with this release as several big changes has been made and several big new features has been added.
With this release InfoGlue has taken the step from being only a good CMS to now being a Portal/CMS hybrid which was allways the intention.
This release contains many bugfixes compared to 2.0RC2 but also features a lot of new functionality and performance improvements.

Thanx to all involved!!

The InfoGlue Team


Abbreviated Changelog from 2.0RC2 
---------------------------------------

New features
- Added possibility to set a parent repository in repository properties - this in turn means properties can be inherited between repositories.
- Added property to repository so one can set which repository should be default when looking for components
- Added a component property editor so one can avoid the xml-mode as a developer.
- Added a lot of InfoGlue taglibs for JSP developers.
- Added mysettings handling. Now it's possible to set preferred language and tool and also change password yourself.
- Made it possible to set which components are allowed in a slot
- Fixed so hidden fields are supported in content type definitions

Improvements
- Changed all classes to use log4j
- Fixed so validation errors does not reinitialize the old data but keep the bad one for the user
- Fixed so one can use page templates on existing pages as well and also added filtering so only
pageTemplates with meta info in the same language that your site has for master language can be used
- Added methods to get info about a property on a specific sitenode.
- Improved performance on both deliver and tools.
- Added info-button on workflows. Also made page templates rights-protected. 
- Added model relation between contentVersion and contentCategory and contentCategory and category and changed the logic accordingly.
- Improved possibility to set title on workflows in the MyDesktop view.
- Added methods for common fileupload
- Added possibility to restrict if the image should have sizes assigned in WYSIWYG and fixed some bugs.
- Parametirized URIEncoding
- Updated to Pluto 1.0.1rc4

Changes:
- Had to removed so edit on sight only works in the internal page view - not in working delivery.

Bug fixes
- portlet deployment removes web.xml elements
- Fixed issues with portlets and file uploads - now uploads reach the portlet
- Fixed so saveAndExit works on some property screens
- Fixed unclosed transaction in portlet handling
- Fixed base url so graphics etc becomes correct in the login screen (for nice uri:s)
- Fixed a bug with root nodes and nice uri:s when changing languages.
- Added class to input-fields in the component editor and made other aspects of the component editor less sensitive.




-------------------------------------------------------------------------------------
- InfoGlue 2.0 RC2
-------------------------------------------------------------------------------------

Release notes
---------------------------------------
The second release candidate for version 2.0 of InfoGlue is released.
This release contains many bugfixes compared to 2.0RC1 and is probably the last candidate before we release 2.0 Final.

Thanx to all involved!!

The InfoGlue Team


Abbreviated Changelog from 2.0RC1 
---------------------------------------

New features
- Made it possible to choose URI request parameter delimiter (& normally). To support XHTML better. 
- Added two new interception points: 
	* Publication.Write which notifies interceptors upon a publication taking place and 
	* Repository.ReadForBinding which is a part of the new possibility to allow sharing of info between repositories without having access to the repository in other ways.
- A new feature in content types which lets you initialize attributes with prestated values.
- Made ViewApplicationState.action much more informative and made it possible to empty caches from there.
- Made hotkey Alt+S save in content editing screens - not in WYSIWYG fields though.
- You can now add more tool-language-links in the tool interface from the cms.properties file.
- It's now possible to state that template-choosing dialog should be by default listing components in a different repository than the user are working in. For sharing setups.

Improvements
- An improved cache update strategy which does not require database access during that reqest but rather que it up.
- Improved registry consistency on updates all over.
- Now allows spaces in workflow names
- Much better expire cache strategy with Quartz jobs handling it on all applications.
- Improved NiceURI a lot so it now handles linking between repositories, component editor and some other issues. You can now also choose which attribute/sitenode name it should work with. 
- Cleaned up and fixed so site css does not mess up the component editors gui.
- You can now navigate directly in component editor and still be in decorated mode.
- Changed so the publication details of a publication is now not allways fetched. Only fetched on request and popped up in it's own window.
- We moved email rendering out of the code as proposed by Frank Febbraro so now it's possible to style this in a velocity template. You can also choose html or plain format.

Bug fixes
- Huge bug fixed in asset copy on state change. Made all version of a content work with the same asset.
- Preview button was not included in install
- Settings not done correct in install, affects propertyset.xml and hibernate.conf
- Login filter got wrong parameter which resulted in blank page after login.
1216331 - "Check all" and "Uncheck all" does not work



-------------------------------------------------------------------------------------
- InfoGlue 2.0 RC1
-------------------------------------------------------------------------------------

Release notes
---------------------------------------
The InfoGlue Team is very pleased to finally announce the first Release Candidate of version 2.0.
This release is by far the largest effort yet and since we incorporated JSR 168 and enhanced workflow support the platform has taken a big leap into the portal and enterprise content management area. As a comment we are also very happy to see that the user community is growing fast even though we have neglected marketing at the moment. 
Quite a few large organisations are now in the last stages of launching InfoGlue-based sites and the release of 2.0 will hopefully get even more companies to consider it.

Thanx to all involved!!

The InfoGlue Team


Abbreviated Changelog from 1.3.2 
---------------------------------------

New features
- Better support for Java 5. Xalan is now included by default.
- We now have support for JSR 168 thanx to the guys at "Myndigheten f�r skolutveckling" (Jan, Robert, G�ran). Apache Pluto is incorporated nicely.
- Categorization is implemented nicely. Brings a lot of possibilities to how to build a site and personalize it.
- Added a new concept called "Groups" to complement users and roles in the security model. 
- The component editor and edit on sight is now somewhat the same.
- One can add workflow options on components so the options (like "Create News") turns up on the edit on sight menu for the news component. 
- Support of component restricting that only contents of certain content type(s) are available to users in a particular component binding dialog
- Support for restricting what content types a role/group can create content of
- Support for restricting what kind of contents are allowed below a certain folder
- Support for assigning default content type for new contents below a certain folder
- Support for assigning a default forlder content type
- Added possibility to move multiple contents and sitenodes at once.
- Added direct publishing/unpublishing feature for publishers.
- A new registry feature keeps track of what happens and what contents/sitenodes depend on what so that the user gets a warning when he does something that will result in inconsistency or broken links. 
- When publishing, dependent changes are also listed as proposed items to publish.
- Validation on content versions are now added at long last. Required, Required If and Match RegularExpression is available from the start but more can be added.
- The internal search feature has been much improved and also equipped with a multiple replace feature. Whohoo..
- The possibility to move components on a page within a slot.
- The ability to set session timeout for tool users.
- Improved JSP support and some InfoGlue taglibs added. More to come in later versions.
- Webservices support added with some examples. Not to many API:s exposed yet though.
- Added component cache and selective cache updates on that.
- Added a simple view of the component editor for cases where the html breaks down. 
- Thanx to Frank and Jed the project has gotten some better cvs structure and much improved workflow api:s. 

Improvments
- Much better performance and less memory consumption for all applications. Better db-pooling and more advanced caches to reduce load on dbserver.
- Selective cache updates on page cache.
- Added a new WYSIWYG (FCKEditor) which is far superior to the old HTMLArea we used (which is discontinued by the way). FCKEditor is now the default editor.
- Improved dialogs in WYSIWYG and also better possibilities to customaize the toolbar etc on the WYSIWYG toolbar / css etc.
- Possibility to link to assets and to pages with content as argument from WYSIWYG.
- Possibility to change password easier.
- Made workflows definitions part of the data model so it's easy to manage and distribute. Also changed to Hibernate for it's data layer.
- The user is now directly taken to the master content version when clicking on a content. A new button shows the cover.
- The user is now directly taken to the page component view when clicking a sitenode. A new button shows the cover.
- Refactored the views a bit so there is only one view in management. No dropdown to repository settings.
- SystemUser-, Group- and Role properties now has full support for assets, categories and relations just like content versions.
- A much improved asset upload is in place. It shows direct feedback on upload and real error messages if failed. 
- You can restrict asset size very detailed on size, width and height in the content types.
- Made all interfaces much better and more robust. A lot of improvments and the possibility to move and resize much of the items in the component editor.
- The tool-tree now remembers branches you used from before which helps a lot.
- Publishing-tool now shows only 10 publications at a time.
- Support for ImageMagic added as thumbnail generator instead of Javas own. 
- Easier to add new languages to the gui.
- Much improved support for Mozilla Firefox - now the primary development browser and highly recommended over IE.

Bug fixes
- 1090285	nice-uri URLComposer bug
- 1119067	Adding Users to Roles
- 1047710	Installation Error-FileNotFound
- 947633	HTMLFormular drops attributes
- 1078314	1.3: Javascript error on "Extranet login"
- 1108936	Editing an object problem Tomcat 4.1 Java 1.5
- 1110545	filenames with # doesn't supports